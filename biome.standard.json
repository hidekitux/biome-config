{
  "$schema": "./node_modules/@biomejs/biome/configuration_schema.json",
  "vcs": {
    "enabled": true,
    "clientKind": "git",
    "useIgnoreFile": true
  },
  "formatter": {
    "enabled": true,
    "formatWithErrors": false,
    "indentStyle": "space",
    "indentWidth": 2,
    "lineEnding": "lf",
    "lineWidth": 80,
    "attributePosition": "auto"
  },
  "javascript": {
    "formatter": {
      "arrowParentheses": "always",
      "bracketSameLine": false,
      "bracketSpacing": true,
      "lineEnding": "lf",
      "quoteProperties": "asNeeded",
      "quoteStyle": "single",
      "semicolons": "asNeeded",
      "trailingCommas": "none"
    },
    "globals": [
      "document",
      "navigator",
      "window",
      "process",
      "Buffer",
      "__dirname",
      "__filename",
      "module",
      "require",
      "exports",
      "global"
    ]
  },
  "linter": {
    "enabled": true,
    "rules": {
      "recommended": true,
      "complexity": {
        "noBannedTypes": "error",
        "noExcessiveCognitiveComplexity": {
          "level": "warn",
          "options": {
            "maxAllowedComplexity": 15
          }
        },
        "noExtraBooleanCast": "error",
        "noForEach": "off",
        "noAdjacentSpacesInRegex": "error",
        "noStaticOnlyClass": "warn",
        "noThisInStatic": "error",
        "noUselessCatch": "error",
        "noUselessConstructor": "error",
        "noUselessEmptyExport": "error",
        "noUselessLabel": "error",
        "noUselessLoneBlockStatements": "error",
        "noUselessRename": "error",
        "noUselessSwitchCase": "error",
        "noUselessTernary": "error",
        "noUselessThisAlias": "error",
        "noUselessTypeConstraint": "error",
        "noVoid": "error",
        "noArguments": "error",
        "noCommaOperator": "error",
        "useArrowFunction": "off",
        "useFlatMap": "warn",
        "useLiteralKeys": "error",
        "useOptionalChain": "warn",
        "useRegexLiterals": "error",
        "useSimpleNumberKeys": "warn",
        "useSimplifiedLogicExpression": "warn"
      },
      "correctness": {
        "noConstAssign": "error",
        "noConstantCondition": "error",
        "noConstructorReturn": "error",
        "noEmptyCharacterClassInRegex": "error",
        "noEmptyPattern": "error",
        "noGlobalObjectCalls": "error",
        "noInnerDeclarations": "error",
        "noInvalidConstructorSuper": "error",
        "noInvalidBuiltinInstantiation": "error",
        "noInvalidUseBeforeDeclaration": "error",
        "noNonoctalDecimalEscape": "error",
        "noPrecisionLoss": "error",
        "noSelfAssign": "error",
        "noSetterReturn": "error",
        "noStringCaseMismatch": "error",
        "noSwitchDeclarations": "error",
        "noUndeclaredVariables": "error",
        "noUnreachable": "error",
        "noUnreachableSuper": "error",
        "noUnsafeFinally": "error",
        "noUnsafeOptionalChaining": "error",
        "noUnusedImports": "error",
        "noUnusedLabels": "error",
        "noUnusedPrivateClassMembers": "error",
        "noUnusedVariables": "error",
        "noVoidTypeReturn": "error",
        "useIsNan": "error",
        "useValidForDirection": "error",
        "useValidTypeof": "error",
        "useYield": "error"
      },
      "nursery": {
        "noFloatingPromises": "error",
        "noImportCycles": "warn",
        "noMisusedPromises": "error",
        "noSecrets": {
          "level": "error",
          "options": {}
        },
        "noShadow": "warn",
        "noUnnecessaryConditions": "warn",
        "noUnresolvedImports": "off",
        "noUselessUndefined": "warn",
        "useConsistentTypeDefinitions": "warn",
        "useExhaustiveSwitchCases": "warn",
        "useExplicitType": "off",
        "useSortedClasses": "off"
      },
      "performance": {
        "noAccumulatingSpread": "warn",
        "noBarrelFile": "warn",
        "noDelete": "error",
        "noReExportAll": "warn"
      },
      "security": {
        "noGlobalEval": "error"
      },
      "style": {
        "noDefaultExport": "off",
        "noImplicitBoolean": "off",
        "noInferrableTypes": "off",
        "noNamespace": "off",
        "noNegationElse": "off",
        "noNonNullAssertion": "off",
        "noParameterAssign": "error",
        "noParameterProperties": "off",
        "noRestrictedGlobals": {
          "level": "error",
          "options": {
            "deniedGlobals": {
              "event": "Use event parameter instead",
              "fdescribe": "Do not use focused tests"
            }
          }
        },
        "noShoutyConstants": "off",
        "noUnusedTemplateLiteral": "warn",
        "noUselessElse": "warn",
        "useAsConstAssertion": "warn",
        "useBlockStatements": "error",
        "useCollapsedElseIf": "warn",
        "useConst": "error",
        "useConsistentArrayType": {
          "level": "warn",
          "options": {
            "syntax": "shorthand"
          }
        },
        "useDefaultParameterLast": "warn",
        "useEnumInitializers": "off",
        "useExponentiationOperator": "warn",
        "useExportType": "warn",
        "useFilenamingConvention": {
          "level": "off"
        },
        "useForOf": "warn",
        "useImportType": "warn",
        "useLiteralEnumMembers": "error",
        "useNamingConvention": {
          "level": "error",
          "options": {
            "strictCase": false,
            "requireAscii": false,
            "conventions": [
              {
                "selector": {
                  "kind": "variable"
                },
                "formats": [
                  "camelCase",
                  "PascalCase",
                  "CONSTANT_CASE",
                  "snake_case"
                ]
              },
              {
                "selector": {
                  "kind": "function"
                },
                "formats": ["camelCase", "PascalCase"]
              },
              {
                "selector": {
                  "kind": "typeLike"
                },
                "formats": ["PascalCase"]
              },
              {
                "selector": {
                  "kind": "classProperty"
                },
                "formats": ["camelCase", "PascalCase", "CONSTANT_CASE"]
              },
              {
                "selector": {
                  "kind": "enum"
                },
                "formats": ["PascalCase", "CONSTANT_CASE"]
              },
              {
                "selector": {
                  "kind": "enumMember"
                },
                "formats": ["PascalCase", "CONSTANT_CASE"]
              }
            ]
          }
        },
        "useNodeAssertStrict": "off",
        "useNodejsImportProtocol": "warn",
        "useNumberNamespace": "warn",
        "useShorthandAssign": "warn",
        "useShorthandFunctionType": "warn",
        "useSingleVarDeclarator": "error",
        "useTemplate": "warn"
      },
      "suspicious": {
        "noApproximativeNumericConstant": "error",
        "noAssignInExpressions": "error",
        "noAsyncPromiseExecutor": "error",
        "noCatchAssign": "error",
        "noClassAssign": "error",
        "noCommentText": "off",
        "noCompareNegZero": "error",
        "noConfusingLabels": "error",
        "noConfusingVoidType": "warn",
        "noConsole": {
          "level": "warn",
          "options": {
            "allow": ["warn", "error", "info", "debug"]
          }
        },
        "noVar": "error",
        "noConstEnum": "off",
        "noControlCharactersInRegex": "error",
        "noDebugger": "error",
        "noDoubleEquals": {
          "level": "error",
          "options": {
            "ignoreNull": true
          }
        },
        "noDuplicateCase": "error",
        "noDuplicateClassMembers": "error",
        "noDuplicateObjectKeys": "error",
        "noDuplicateParameters": "error",
        "noDuplicateTestHooks": "error",
        "noEmptyBlockStatements": "error",
        "noEmptyInterface": "warn",
        "noEvolvingTypes": "off",
        "noExplicitAny": "off",
        "noExportsInTest": "error",
        "noExtraNonNullAssertion": "error",
        "noFallthroughSwitchClause": "error",
        "noFocusedTests": "error",
        "noFunctionAssign": "error",
        "noGlobalAssign": "error",
        "noGlobalIsFinite": "error",
        "noGlobalIsNan": "error",
        "noImplicitAnyLet": "warn",
        "noImportAssign": "error",
        "noLabelVar": "error",
        "noMisleadingCharacterClass": "error",
        "noMisleadingInstantiator": "error",
        "noMisrefactoredShorthandAssign": "error",
        "noPrototypeBuiltins": "error",
        "noRedeclare": "error",
        "noRedundantUseStrict": "error",
        "noSelfCompare": "error",
        "noShadowRestrictedNames": "error",
        "noSkippedTests": "warn",
        "noSparseArray": "error",
        "noThenProperty": "error",
        "noUnsafeDeclarationMerging": "error",
        "noUnsafeNegation": "error",
        "useAwait": "error",
        "useDefaultSwitchClauseLast": "error",
        "useGetterReturn": "error",
        "useIsArray": "error",
        "useNamespaceKeyword": "error",
        "noWith": "error"
      }
    }
  },
  "json": {
    "formatter": {
      "enabled": true,
      "indentStyle": "space",
      "indentWidth": 2,
      "lineEnding": "lf",
      "lineWidth": 80,
      "trailingCommas": "none"
    },
    "parser": {
      "allowComments": true,
      "allowTrailingCommas": false
    },
    "linter": {
      "enabled": true
    }
  },
  "overrides": [
    {
      "includes": ["*.ts", "*.tsx", "*.mts", "*.cts"],
      "linter": {
        "rules": {
          "correctness": {
            "noUndeclaredVariables": "off"
          },
          "style": {
            "useExportType": "error",
            "useImportType": "error"
          }
        }
      }
    },
    {
      "includes": ["*.jsx", "*.tsx"],
      "linter": {
        "rules": {
          "correctness": {
            "useExhaustiveDependencies": "error",
            "useHookAtTopLevel": "error"
          },
          "suspicious": {
            "noArrayIndexKey": "error"
          },
          "style": {
            "useFragmentSyntax": "error"
          }
        }
      }
    },
    {
      "includes": ["*.test.ts", "*.spec.ts", "*.test.js", "*.spec.js"],
      "linter": {
        "rules": {
          "suspicious": {
            "noExportsInTest": "error",
            "noFocusedTests": "error",
            "noSkippedTests": "warn"
          }
        }
      }
    },
    {
      "includes": [
        "*.config.js",
        "*.config.ts",
        "*.config.mjs",
        "*.config.cjs"
      ],
      "linter": {
        "rules": {
          "style": {
            "noDefaultExport": "off"
          }
        }
      }
    }
  ]
}
